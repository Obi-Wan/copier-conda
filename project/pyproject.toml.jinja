[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ python_package_distribution_name }}"
version = "0.1.0"
description = "{{ project_description }}"
authors = [{name = "{{ author_fullname }}", email = "{{ author_email }}"}]
license = {text = "
    {%- if copyright_license == "Academic Free License v3.0" -%}
    AFL-3.0
    {%- elif copyright_license == "Apache License 2.0" -%}
    Apache-2.0
    {%- elif copyright_license == "Artistic License 2.0" -%}
    Artistic-2.0
    {%- elif copyright_license == "BSD 2-Clause \"Simplified\" License" -%}
    BSD-2-Clause
    {%- elif copyright_license == "BSD 3-Clause Clear License" -%}
    BSD-3-Clause-Clear
    {%- elif copyright_license == "BSD 3-Clause \"New\" or \"Revised\" License" -%}
    BSD-3-Clause
    {%- elif copyright_license == "Boost Software License 1.0" -%}
    BSL-1.0
    {%- elif copyright_license == "Creative Commons Attribution 4.0" -%}
    CC-BY-4.0
    {%- elif copyright_license == "Creative Commons Attribution Share Alike 4.0" -%}
    CC-BY-SA-4.0
    {%- elif copyright_license == "Creative Commons Zero v1.0 Universal" -%}
    CC0-1.0
    {%- elif copyright_license == "Do What The F*ck You Want To Public License" -%}
    WTFPL
    {%- elif copyright_license == "Educational Community License v2.0" -%}
    ECL-2.0
    {%- elif copyright_license == "Eclipse Public License 1.0" -%}
    EPL-1.0
    {%- elif copyright_license == "Eclipse Public License 2.0" -%}
    EPL-2.0
    {%- elif copyright_license == "European Union Public License 1.1" -%}
    EUPL-1.1
    {%- elif copyright_license == "European Union Public License 1.2" -%}
    EUPL-1.2
    {%- elif copyright_license == "GNU Affero General Public License v3.0" -%}
    AGPL-3.0
    {%- elif copyright_license == "GNU General Public License v2.0" -%}
    GPL-2.0
    {%- elif copyright_license == "GNU General Public License v3.0" -%}
    GPL-3.0
    {%- elif copyright_license == "GNU Lesser General Public License v2.1" -%}
    LGPL-2.1
    {%- elif copyright_license == "GNU Lesser General Public License v3.0" -%}
    LGPL-3.0
    {%- elif copyright_license == "ISC License" -%}
    ISC
    {%- elif copyright_license == "LaTeX Project Public License v1.3c" -%}
    LPPL-1.3c
    {%- elif copyright_license == "MIT License" -%}
    MIT
    {%- elif copyright_license == "Mozilla Public License 2.0" -%}
    MPL-2.0
    {%- elif copyright_license == "Microsoft Public License" -%}
    MS-PL
    {%- elif copyright_license == "Microsoft Reciprocal License" -%}
    MS-RL
    {%- elif copyright_license == "University of Illinois/NCSA Open Source License" -%}
    NCSA
    {%- elif copyright_license == "SIL Open Font License 1.1" -%}
    OFL-1.1
    {%- elif copyright_license == "Open Software License 3.0" -%}
    OSL-3.0
    {%- elif copyright_license == "PostgreSQL License" -%}
    PostgreSQL
    {%- elif copyright_license == "The Unlicense" -%}
    Unlicense
    {%- elif copyright_license == "zlib License" -%}
    Zlib
    {%- endif %}"}
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">={{ lowest_python_version }}"
keywords = []
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
{%- for ver in python_versions.split(' ') %}
    "Programming Language :: Python :: {{ ver }}",
{%- endfor %}
    "Topic :: Documentation",
    "Topic :: Software Development",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "python>={{ lowest_python_version }}",
]

[project.optional-dependencies]
dev = [
    # dev
    "editables>=0.5",

    # maintenance
    "build>=1.2",
    "git-changelog>=2.4",
    "twine>=5.1; python_version < '3.13'",

    # ci
    "isort",
    "pyupgrade",
    "pytest>=8.2",
    "pytest-cov>=5.0",
    "pytest-randomly>=3.15",
    "pytest-xdist>=3.6",
    "mypy>=1.10",
    "types-markdown>=3.6",
    "types-pyyaml>=6.0",

    # docs
    "black>=24.4",
    "mkdocs>=1.6",
    "mkdocs-gen-files>=0.4",
    "mkdocs-git-committers-plugin-2>=2.3",
    "mkdocs-literate-nav>=0.6",
    "mkdocs-material>=9.5",
    "mkdocstrings[python]>=0.25",
    "tomli>=2.0; python_version < '3.11'",
]

[project.urls]
Homepage = "https://{{ repository_namespace }}.{{ repository_provider.rsplit('.', 1)[0] }}.io/{{ repository_name }}"
Documentation = "https://{{ repository_namespace }}.{{ repository_provider.rsplit('.', 1)[0] }}.io/{{ repository_name }}"
Changelog = "https://{{ repository_namespace }}.{{ repository_provider.rsplit('.', 1)[0] }}.io/{{ repository_name }}/changelog"
Repository = "https://{{ repository_provider }}/{{ repository_namespace }}/{{ repository_name }}"
Issues = "https://{{ repository_provider }}/{{ repository_namespace }}/{{ repository_name }}/issues"
Discussions = "https://{{ repository_provider }}/{{ repository_namespace }}/{{ repository_name }}/discussions"

{% if python_package_command_line_name -%}
[project.scripts]
{{ python_package_command_line_name }} = "{{ python_package_import_name }}.cli:main"
{% endif -%}

[tool.black]
line-length = 127
exclude = "tests/fixtures"

[tool.isort]
line_length = 127
not_skip = "__init__.py"
multi_line_output = 3
force_single_line = false
balanced_wrapping = true
default_section = "THIRDPARTY"
known_first_party = "{{ python_package_import_name }}"
include_trailing_comma = true
